name: Playwright Tests

on:
  push:
    paths:
      - 'tests/**'
      - 'playwright.config.ts'
      - '.github/workflows/**'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'

jobs:
  test-sandbox-on-framework-change:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Sandbox Test on Framework Change
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npx playwright install --with-deps
      - name: Run @smoke tests for sandbox only
        run: TEST_ENV=sandbox npx playwright test --grep @smoke --reporter=html

  test:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        test-env: [sandbox, staging, prod]

    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run tests by environment and event
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "schedule" && "${{ matrix.test-env }}" == "sandbox" ]]; then
            TEST_ENV=${{ matrix.test-env }} npx playwright test --grep @full --reporter=html
          elif [[ "$GITHUB_REF" == "refs/heads/main" && "${{ matrix.test-env }}" == "staging" ]]; then
            TEST_ENV=${{ matrix.test-env }} npx playwright test --grep @critical --reporter=html
          elif [[ "$GITHUB_REF" == "refs/heads/main" && "${{ matrix.test-env }}" == "prod" ]]; then
            TEST_ENV=${{ matrix.test-env }} npx playwright test --grep @smoke --reporter=html
          elif [[ "$GITHUB_EVENT_NAME" == "pull_request" && "${{ matrix.test-env }}" == "sandbox" ]]; then
            TEST_ENV=${{ matrix.test-env }} npx playwright test --grep @smoke --reporter=html
          else
            echo "No tests configured for this environment and trigger."
          fi

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results-${{ matrix.test-env }}
          path: playwright-report/

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -D allure-commandline@2.20.1
          npx allure generate --clean

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.test-env }}
          path: allure-report/

      - name: Slack Notification (failure only for schedule)
        if: failure() && github.event_name == 'schedule'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          fields: repo,message,commit,author
          custom_payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "text": "❌ Nightly @full tests failed in ${{ matrix.test-env }}: https://axelforce.github.io/ggFinance/"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Notification (always notify on other runs)
        if: always() && github.event_name != 'schedule'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,message,commit,author
          custom_payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "text": "✅ ${{ matrix.test-env }} run completed. Allure: https://axelforce.github.io/ggFinance/"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
